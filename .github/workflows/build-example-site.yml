name: Build and Deploy Example Site

on:
  push:
    branches: [ main, v0.2.0 ]
    paths:
      - 'exampleSite/**'
      - 'src/**'
      - 'shard.yml'
      - 'shard.lock'
      - '.github/workflows/build-example-site.yml'
  pull_request:
    branches: [ main, v0.2.0 ]
    paths:
      - 'exampleSite/**'
      - 'src/**'
      - 'shard.yml'
      - 'shard.lock'
      - '.github/workflows/build-example-site.yml'
  workflow_dispatch: # Allow manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Crystal
      uses: crystal-lang/install-crystal@v1
      with:
        crystal: "1.10.1"
    
    - name: Cache Crystal dependencies
      uses: actions/cache@v3
      with:
        path: |
          ./lib
          ./shard.lock
        key: crystal-deps-${{ hashFiles('shard.yml', 'shard.lock') }}
        restore-keys: |
          crystal-deps-
    
    - name: Install dependencies
      run: shards install --production
    
    - name: Build Lapis binary
      run: |
        crystal build src/lapis.cr --release -o bin/lapis
        chmod +x bin/lapis
    
    - name: Verify Lapis installation
      run: |
        ./bin/lapis --help
        echo "‚úÖ Lapis binary built successfully"
    
    - name: Build example site
      run: |
        cd exampleSite
        echo "üìÇ Building Lapis example site..."
        ../bin/lapis build
        echo "‚úÖ Example site built successfully"
        
        # Show build output summary
        echo "üìä Build Summary:"
        echo "   Output directory: $(pwd)/public"
        echo "   Generated files: $(find public -type f | wc -l)"
        echo "   Total size: $(du -sh public | cut -f1)"
        
        # List generated files for verification
        echo "üìÅ Generated files:"
        find public -type f -name "*.html" | head -10
    
    - name: Upload site artifacts
      uses: actions/upload-artifact@v3
      with:
        name: example-site
        path: exampleSite/public/
        retention-days: 30
    
    - name: Setup Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/v0.2.0'
      uses: actions/configure-pages@v3
    
    - name: Upload to GitHub Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/v0.2.0'
      uses: actions/upload-pages-artifact@v2
      with:
        path: exampleSite/public
    
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/v0.2.0'
      id: deployment
      uses: actions/deploy-pages@v2

  # Optional: Test the build locally to ensure it works
  test-build:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Crystal
      uses: crystal-lang/install-crystal@v1
      with:
        crystal: "1.10.1"
    
    - name: Install dependencies
      run: shards install --production
    
    - name: Build and test Lapis
      run: |
        crystal build src/lapis.cr --release -o bin/lapis
        chmod +x bin/lapis
    
    - name: Test example site build
      run: |
        cd exampleSite
        ../bin/lapis build
        
        # Basic validation
        test -f public/index.html || (echo "‚ùå index.html not generated" && exit 1)
        test -f public/about/index.html || (echo "‚ùå about page not generated" && exit 1)
        test -f public/feed.xml || (echo "‚ùå RSS feed not generated" && exit 1)
        test -f public/sitemap.xml || (echo "‚ùå Sitemap not generated" && exit 1)
        
        echo "‚úÖ All expected files generated successfully"
        
        # Check for posts
        if [ -d "public/2025" ]; then
          echo "‚úÖ Blog posts generated successfully"
        else
          echo "‚ö†Ô∏è  No blog posts found (this might be expected)"
        fi
